--- Текст переписки с представителями компании Тинькофф

Привет, Виталий)

Ниже тестовое:

Задание на знакомство с Redis.

User story: Нужен максимально простой чат, построенный с использованием Redis-а.

Перед началом разработки нужно будет поставить сам Redis, на linux-машина или виртуалку https://redis.io/download , для Windows ниже 10 версии https://github.com/ServiceStack/redis-windows (не поддерживается, 3-ий пункт), на 10-ке можно поставить Redis используя «Ubuntu on Windows», туториал тоже тут https://github.com/ServiceStack/redis-windows

Требования: Написать простой чат, клиентская часть на выбор. Либо «толстый клиент» - консольное приложение, напрямую общающиеся с Redis-ом. Либо Asp.net SignalR приложение с простым веб-клиентом.

Требования по реализации: Обмен сообщениями через Redis PUB/SUB https://redis.io/topics/pubsub и хранение истории сообщений в течении N минут (настройка, желательно использовать https://redis.io/commands/expire ) в Redis-е. В качестве библиотеки мы используем StackExchange.Redis https://www.nuget.org/packages/StackExchange.Redis/

Решение можно расшарить любым удобным способом. Можно писать Саше Голенкевичу, если возникнут какие-то вопросы, - он в копии.


-------- Ответное сообщение 

https://github.com/VitalyMedvedev/SimpleChat/pull/1/files 
 
Благодарю за  интересное тестовое задание.
В рамках тестового задания: 
1. Установлен Redis, используя "Ubuntu on Windows";
2. Разработан простой чат (консольное приложение на прямую общающееся с Redis);
3. Реализован обмен сообщениями через Redis PUB/SUB и хранение истории сообщений в течении некоторого времени, задающегося в конфигурационном файле.
В качестве библиотеки использовался StackExchange.Redis.
 
В рамках выполнения задания для архитектуры использовался шаблон "Лестница" для организации классов и интерфейсов, что позволило на уровне отдельных проектов разрабатывать через абстракции, не имея ссылок на конкретные реализации в проектах.
 
Прошу принять во внимание, что реализация и функционал упрощены в рамках тестового задания. Так допустим не обязательные параметры методов библиотеки StackExchange.Redis не использовались. Так же не были написаны тесты, хотя логики практически нет и думаю что тесты были бы здесь лишними. В данной реализации консольное приложение использует одну сессию (соединение) на все время работы - это приемлемо для веб приложения, но для консольного приложения лучше закрывать соединение, т.к. кол-во поддерживаемых соединений у Redis ограничено. Не было реализовано в рамках дефицита времени (хотя большинство условий для данной реализации в коде были созданы - необходимо только доработать проект консольного приложения).
 
Все вышеуказанные моменты не были реализованы по причине ограниченного времени,  которое я мог потратить на тестовое задание в рамках выходных, а так же по причине того что это тестовое задание, которое показывает стиль мышления, работы и не требует реализации как при выпуске продукта, так как на это ушло бы гораздо больше времени.
 
Приложение работоспособно, обмен сообщениями есть, при первом входе загружается история за последнее N время (настраивается в конфигурационном файле).
Думаю, что данной реализации вполне достаточно для понимания - соответствую ли я требованиям компании.

Благодарю за внимание)